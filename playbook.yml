---
- hosts: '*ns'
  become: true
  become_method: sudo
  tasks:
    - yum:
        name: bind
    - lineinfile:
        path: /etc/named.conf
        regexp: listen-on
        state: absent
    - lineinfile:
        path: /etc/named.conf
        regexp: allow-query
        state: absent
    - service:
        name: named
        state: started
        enabled: true

- hosts: all
  become: true
  become_method: sudo
  tasks:
    - with_inventory_hostnames: '*ns'
      blockinfile:
        path: /etc/dhcp/dhclient.conf
        block: supersede domain-name-servers {{ hostvars[item].ansible_default_ipv4.address }};
      register: dhclient_conf
    - when: dhclient_conf.changed
      reboot: { }

- hosts: '*db'
  become: true
  become_method: sudo
  vars:
    packages:
      - name: influxdb
        url: https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10.x86_64.rpm
        sha256: cb550bc8a62e334b070f9cb2247921d47007b74c2343c95b0c3fe12077536e1c
      - name: grafana
        url: https://dl.grafana.com/oss/release/grafana-10.2.3-1.x86_64.rpm
        sha256: 7155e5ff4029d56c3fa16d960e57b31eee34250b7c0d3a118dd2fb5e2009d222
  tasks:
    - yum:
        name: createrepo
    - loop: '{{ packages }}'
      file:
        path: '/opt/{{ item.name }}'
        state: directory
    - loop: '{{ packages }}'
      get_url:
        dest: '/opt/{{ item.name }}/'
        url: '{{ item.url }}'
        checksum: 'sha256:{{ item.sha256 }}'
    - loop: '{{ packages }}'
      shell: 'createrepo /opt/{{ item.name }}'
      args:
        creates: '/opt/{{ item.name }}/repodata/repomd.xml'
    - loop: '{{ packages }}'
      yum_repository:
        name: '{{ item.name }}'
        description: '{{ item.name }}'
        baseurl: 'file:///opt/{{ item.name }}'
        gpgcheck: false
    - loop: '{{ packages }}'
      yum:
        name: '{{ item.name }}'
    - service:
        name: influxdb
        state: started
        enabled: true
    - service:
        name: grafana-server
        state: started
        enabled: true
    - yum:
        name: epel-release
    - yum:
        name: python2-pip
    - pip:
        name: influxdb
        version: 3.0.0
    - influxdb_database:
        database_name: icinga2
    - yum:
        name: mariadb-server
    - copy:
        dest: /etc/my.cnf.d/icingadb.cnf
        src: my.cnf
    - service:
        name: mariadb
        state: started
        enabled: true
    - yum:
        name: MySQL-python
    - mysql_db:
        name: icinga
    - mysql_db:
        name: icingadb

- hosts: '*master-*:*sat-*:*agent-*'
  become: true
  become_method: sudo
  tasks:
    - yum:
        name: epel-release
    - rpm_key:
        key: https://packages.icinga.com/icinga.key
    - get_url:
        dest: /etc/yum.repos.d/ICINGA-release.repo
        url: https://packages.icinga.com/centos/ICINGA-release.repo
    - loop:
        - git
        - icinga2
        - icinga2-ido-mysql
        - icinga2-selinux
        - icingadb
        - python3
        - python36-psutil
      yum:
        name: '{{ item }}'
    - copy:
        dest: /usr/lib64/nagios/plugins/
        src: check_random.py
    - file:
        path: /opt/Linuxfabrik
        state: directory
    - loop:
        - project: lib
          commit: 21542560ece9dffa2818fd16ee0495883271e7dc # 2023112901
        - project: monitoring-plugins
          commit: 096aa98a7d81d169d4492c00f94d0bc336b061dd # 2023112901
      git:
        dest: '/opt/Linuxfabrik/{{ item.project }}'
        repo: 'https://github.com/Linuxfabrik/{{ item.project }}.git'
        version: '{{ item.commit }}'

- hosts: '*master-2:*sat-*:*agent-*'
  become: true
  become_method: sudo
  become_user: icinga
  tasks:
    - shell: >-
        icinga2 node setup --zone {{ inventory_hostname
        }} --endpoint placeholder --cn {{ inventory_hostname
        }} --listen 0.0.0.0 --accept-config --accept-commands --disable-confd
      args:
        creates: /etc/icinga2/features-enabled/api.conf
    - shell: >-
        openssl req -new -nodes -subj /CN={{ inventory_hostname
        }} -key {{ inventory_hostname }}.key -out {{ inventory_hostname }}.csr
      args:
        chdir: /var/lib/icinga2/certs
        creates: '/var/lib/icinga2/certs/{{ inventory_hostname }}.csr'
    - fetch:
        dest: .download/csr.d/
        flat: true
        src: '/var/lib/icinga2/certs/{{ inventory_hostname }}.csr'

- hosts: '*master-1'
  become: true
  become_method: sudo
  become_user: icinga
  tasks:
    - copy:
        dest: /var/lib/icinga2/ansible-csr.d/
        src: .download/csr.d/
    - shell: >-
        icinga2 node setup --master --cn {{ inventory_hostname
        }} --listen 0.0.0.0 --accept-config --accept-commands --disable-confd
      args:
        creates: /etc/icinga2/features-enabled/api.conf
    - file:
        path: /var/lib/icinga2/ansible-cert.d
        owner: icinga
        state: directory
    - with_inventory_hostnames: '*master-2:*sat-*:*agent-*'
      shell: >-
        icinga2 pki sign-csr --csr ansible-csr.d/{{ item
        }}.csr --cert ansible-cert.d/{{ item }}.crt
      args:
        chdir: /var/lib/icinga2
        creates: '/var/lib/icinga2/ansible-cert.d/{{ item }}.crt'
    - fetch:
        dest: .download/
        flat: true
        src: /var/lib/icinga2/ca/ca.crt
    - with_inventory_hostnames: '*master-2:*sat-*:*agent-*'
      fetch:
        dest: .download/cert.d/
        flat: true
        src: '/var/lib/icinga2/ansible-cert.d/{{ item }}.crt'
    - loop:
        - icinga2-ido-mysql/schema/mysql.sql
        - icingadb/schema/mysql/schema.sql
      fetch:
        dest: .download/
        flat: true
        src: '/usr/share/{{ item }}'

- hosts: '*db'
  become: true
  become_method: sudo
  tasks:
    - copy:
        dest: /opt/icinga2-ido-mysql.sql
        src: .download/mysql.sql
      register: ido_schema
    - when: ido_schema.changed
      mysql_db:
        name: icinga
        state: import
        target: /opt/icinga2-ido-mysql.sql
    - mysql_user:
        name: icinga
        host: '%'
        password: icinga
        priv: 'icinga.*:ALL'
    - copy:
        dest: /opt/icingadb.sql
        src: .download/schema.sql
      register: icingadb_schema
    - when: icingadb_schema.changed
      mysql_db:
        name: icingadb
        state: import
        target: /opt/icingadb.sql
    - mysql_user:
        name: icingadb
        host: '%'
        password: CHANGEME
        priv: 'icingadb.*:ALL'

- hosts: '*master-2:*sat-*:*agent-*'
  become: true
  become_method: sudo
  become_user: icinga
  tasks:
    - copy:
        dest: /var/lib/icinga2/certs/
        src: .download/ca.crt
    - copy:
        dest: /var/lib/icinga2/certs/
        src: '.download/cert.d/{{ inventory_hostname }}.crt'

- hosts: '*master-*'
  become: true
  become_method: sudo
  tasks:
    - replace:
        path: /etc/icinga2/features-available/influxdb.conf
        regexp: //
        replace: ''
    - with_inventory_hostnames: '*db'
      lineinfile:
        path: /etc/icinga2/features-available/influxdb.conf
        regexp: host =
        line: '  host = "{{ hostvars[item].ansible_default_ipv4.address }}"'
    - file:
        path: /etc/icinga2/features-enabled/influxdb.conf
        state: link
        src: /etc/icinga2/features-available/influxdb.conf
    - replace:
        path: /etc/icinga2/features-available/ido-mysql.conf
        regexp: //
        replace: ''
    - with_inventory_hostnames: '*db'
      lineinfile:
        path: /etc/icinga2/features-available/ido-mysql.conf
        regexp: host =
        line: '  host = "{{ hostvars[item].ansible_default_ipv4.address }}"'
    - file:
        path: /etc/icinga2/features-enabled/ido-mysql.conf
        state: link
        src: /etc/icinga2/features-available/ido-mysql.conf
    - yum:
        name: icingadb-redis
    - service:
        name: icingadb-redis
        state: started
        enabled: true
    - file:
        path: /etc/icinga2/features-enabled/icingadb.conf
        state: link
        src: /etc/icinga2/features-available/icingadb.conf
    - with_inventory_hostnames: '*db'
      copy:
        dest: /etc/icingadb/config.yml
        content: |
          database:
            host: {{ hostvars[item].ansible_default_ipv4.address }}
            database: icingadb
            user: icingadb
            password: CHANGEME
          redis:
            host: localhost
    - service:
        name: icingadb
        state: started
        enabled: true

- hosts: '*dos'
  become: true
  become_method: sudo
  tasks:
    - yum:
        name: epel-release
    - yum:
        name: golang
    - copy:
        dest: /opt/
        src: i2dos
    - shell: go build .
      args:
        chdir: /opt/i2dos
        creates: /opt/i2dos/i2dos
    - copy:
        dest: /usr/lib/systemd/system/
        src: i2dos@.service
    - systemd:
        daemon_reload: true
    - with_inventory_hostnames: '*master-*'
      service:
        name: 'i2dos@{{ hostvars[item].ansible_default_ipv4.address }}'
        state: started
        enabled: true

- hosts: '*master-*:*sat-*:*agent-*'
  become: true
  become_method: sudo
  tasks:
    - copy:
        dest: /etc/icinga2/
        src: zones.conf
    - blockinfile:
        path: /etc/sysconfig/icinga2
        block: ICINGA2_RLIMIT_FILES=1000000
    - service:
        name: icinga2
        state: started
        enabled: true
